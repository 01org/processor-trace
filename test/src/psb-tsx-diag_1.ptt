; Copyright (c) 2013, Intel Corporation
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;
;  * Redistributions of source code must retain the above copyright notice,
;    this list of conditions and the following disclaimer.
;  * Redistributions in binary form must reproduce the above copyright notice,
;    this list of conditions and the following disclaimer in the documentation
;    and/or other materials provided with the distribution.
;  * Neither the name of Intel Corporation nor the names of its contributors
;    may be used to endorse or promote products derived from this software
;    without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.

; Test that MODE.TSX in PSB+ is checked against the ptxed state.
;
; Variant 1: adjacent PSB+ are inconsistent
;

org 0x100000
bits 64

; @pt p1: psb()
; @pt p2: fup(3: %l1)
; @pt p3: mode.exec(64bit)
; @pt p4: mode.tsx(begin)
; @pt p5: psbend()
;
; We currently have no means to distinguish the two PSB+ in ptxed.
; We thus believe that this is a single PSB+.
; Since we do not expect such a scenario to occur in practice, we
; simply accept it and add a non-psb event to separate the two PSB+.
;
; @pt p6: fup(3: %l1)
; @pt p7: tip(3: %l1)
l1:     nop

; @pt p8: psb()
; @pt p9: fup(3: %l2)
; @pt p10: mode.exec(64bit)
; @pt p11: mode.tsx(abort)
; @pt p12: psbend()

; The error occured at the MODE.TSX above, but is only detected
; when processing PSB events.
;
; @pt p13: fup(3: %l2)
; @pt p14: tip.pgd(0: 0)
l2:     nop


; @pt .exp(ptxed)
;[interrupt]
;? %0l1 # nop
;[%p14, %l2: warning: speculation mode mismatch]
;[aborted]
;[disabled]


; @pt .exp(ptdump)
;%0p1  psb
;%0p2  fup        3: %0l1, ip=%0l1
;%0p3  mode.exec  cs.d=0, cs.l=1 (64-bit mode)
;%0p4  mode.tsx   intx=1, abort=0
;%0p5  psbend
;%0p6  fup        3: %0l1, ip=%0l1
;%0p7  tip        3: %0l1, ip=%0l1
;%0p8  psb
;%0p9  fup        3: %0l2, ip=%0l2
;%0p10  mode.exec  cs.d=0, cs.l=1 (64-bit mode)
;%0p11  mode.tsx   intx=0, abort=1
;%0p12  psbend
;%0p13  fup        3: %0l2, ip=%0l2
;%0p14  tip.pgd    0: 0x????????????????, ip=<suppressed>
